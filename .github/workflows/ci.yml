name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for MongoDB
      run: |
        timeout 30 bash -c 'until nc -z localhost 27017; do sleep 1; done'
        
    - name: Wait for Redis
      run: |
        timeout 30 bash -c 'until nc -z localhost 6379; do sleep 1; done'

    - name: Run linter
      run: npm run lint || echo "Linter not configured yet"

    - name: Run Unit Tests
      run: npm test -- --selectProjects unit --testTimeout=30000 --maxWorkers=2
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/graphmarket-test
        REDIS_URI: redis://localhost:6379
        JWT_SECRET: test-jwt-secret-key-for-ci-pipeline
        RATE_LIMIT_WINDOW_MS: 900000
        RATE_LIMIT_MAX_REQUESTS: 100
        LOG_LEVEL: error
        CI: true

    - name: Run Integration Tests
      run: npm test -- --selectProjects integration --testTimeout=45000 --maxWorkers=1
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/graphmarket-test-integration
        REDIS_URI: redis://localhost:6379
        JWT_SECRET: test-jwt-secret-key-for-ci-pipeline
        RATE_LIMIT_WINDOW_MS: 900000
        RATE_LIMIT_MAX_REQUESTS: 100
        LOG_LEVEL: error
        CI: true

    - name: Run Full Test Suite with Coverage
      run: npm run test:coverage -- --testTimeout=45000 --maxWorkers=2
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/graphmarket-test-coverage
        REDIS_URI: redis://localhost:6379
        JWT_SECRET: test-jwt-secret-key-for-ci-pipeline
        RATE_LIMIT_WINDOW_MS: 900000
        RATE_LIMIT_MAX_REQUESTS: 100
        LOG_LEVEL: error
        CI: true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == 20

  phase3-validation:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.2-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for services
      run: |
        timeout 30 bash -c 'until nc -z localhost 27017; do sleep 1; done'
        timeout 30 bash -c 'until nc -z localhost 6379; do sleep 1; done'

    - name: Validate Order Processing Features
      run: |
        echo "=== Phase 3 Order Processing Validation ==="
        
        # Test order resolver functionality
        npm test -- --testPathPattern="orderResolvers" --testTimeout=45000 --verbose
        
        # Test order service business logic
        npm test -- --testPathPattern="orderService" --testTimeout=45000 --verbose
        
        echo "=== Phase 3 Validation Complete ==="
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/graphmarket-test-phase3
        REDIS_URI: redis://localhost:6379
        JWT_SECRET: test-jwt-secret-key-for-phase3-validation
        RATE_LIMIT_WINDOW_MS: 900000
        RATE_LIMIT_MAX_REQUESTS: 100
        LOG_LEVEL: debug
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: [test, phase3-validation]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: graphmarket:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high 